# add extra dependant packages for Aladdin installation
- name: Adding Node.js repository
  shell: |
    curl -sL https://rpm.nodesource.com/setup_10.x | sudo -E bash -

- name: Install Dependant Packages for Aladdin
  yum:
    name:
      - gcc-c++
      - make
      - nodejs
    state: installed

- name: Check for Node.js installation
  stat: path=/usr/lib/node-v8.11.4-linux-x64
  changed_when: false
  register: nodejs_install

- name: Install Node.js 8.11.4
  when: not nodejs_install.stat.exists
  shell: |
    ln -s /usr/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js /usr/bin/node-gyp
    mv /usr/bin/node /usr/bin/node@10.16.0
    tar -xvf {{ ansible_env.ANSIBLE_INSTALL_SOURCE_DIR }}/node-v8.11.4-linux-x64.tar.xz -C /usr/lib/
    ln -s /usr/lib/node-v8.11.4-linux-x64/bin/node /usr/bin/node

- name: Check for Aladdin installation
  stat: path=/usr/lib/aladdin-vault-api
  changed_when: false
  register: aladdin_install

- name: Install Aladdin (1/3)
  when: not aladdin_install.stat.exists
  shell: |
    cd /usr/lib/priveth
    export ETHERBASE=`cat ./account | grep -oP "0x[0-9a-zA-Z]+"`
    cd /usr/lib/aladdin
    npm config set user 0
    npm config set unsafe-perm true
    npm install --save sqlite3
    npm install --save '@warren-bank/ethereumjs-tx-unsign'
    cd /usr/lib/aladdin/node_modules/scrypt
    node-gyp rebuild --tarball={{ ansible_env.ANSIBLE_INSTALL_SOURCE_DIR }}/node-v8.11.4-headers.tar.gz
    setsebool -P httpd_can_network_connect 1
    systemctl restart nginx
    cd /usr/lib
    chown -R root:root aladdin
    chmod -R 775 aladdin
    cd /usr/lib/aladdin
    echo "RACECRAFT" | node utils/unlock.js `cat ../priveth/chaindata/keystore/UTC--*` &> tmpkey
    export TMPKEY=`cat tmpkey | grep -oP "0x[0-9a-zA-Z]+" | tail -n 1`
    mv /usr/bin/node /usr/bin/node@8.11.4
    mv /usr/bin/node@10.16.0 /usr/bin/node
    tar -xvf {{ ansible_env.ANSIBLE_INSTALL_SOURCE_DIR }}/aladdin-vault-api.tar.gz -C /usr/lib/
    cd /usr/lib/aladdin-vault-api
    npm install
    sed -i "s/0x0000000000000000000000000000000000000000000000000000000000000000/$TMPKEY/" ./config/default.json
    sed -i "s/0x0000000000000000000000000000000000000000/$ETHERBASE/" ./config/default.json
    cp config/default.json config/local.json
    tar -xvf {{ ansible_env.ANSIBLE_INSTALL_SOURCE_DIR }}/angular-craft-vault.tar.gz -C /tmp
    cp -r /tmp/angular-craft-vault/dist/angular-craft-vault/* /usr/share/nginx/html/
    rm -rf /tmp/angular-craft-vault
    tar -xvf {{ ansible_env.ANSIBLE_INSTALL_SOURCE_DIR }}/go-ipfs_v0.4.18_linux-amd64.tar.gz -C /usr/lib/
    chown -R root:root /usr/lib/go-ipfs/
    chmod -R 775 /usr/lib/go-ipfs/
    ln -s /usr/lib/go-ipfs/ipfs /usr/bin/ipfs
    ipfs init
    chown -R root:root ~/.ipfs
    chmod -R 775 ~/.ipfs
    mkdir /ipfs
    chmod 777 /ipfs

- name: append to supervisord configuration file
  blockinfile:
    path: /etc/supervisord.conf
    block: "{{ lookup('file', 'files/etc/supervisord.conf') }}"

- name: Install Aladdin (2/3)
  when: not aladdin_install.stat.exists
  shell: |
    systemctl restart supervisord
    tar -xvf {{ ansible_env.ANSIBLE_INSTALL_SOURCE_DIR }}/aladdin-vault-cli.tar.gz -C /usr/lib/
    cd /usr/lib/aladdin-vault-cli
    npm install

- name: copy aladdin client configuration file
  copy:
    src: files/aladdin_cli/.config.json
    dest: /usr/lib/aladdin-vault-cli/.config.json
    owner: root
    group: root

- name: Install Aladdin (3/3)
  when: not aladdin_install.stat.exists
  shell: |
    cd /usr/lib/priveth
    export ETHERBASE=`cat ./account | grep -oP "0x[0-9a-zA-Z]+"`
    cd /usr/lib/aladdin
    export TMPKEY=`cat tmpkey | grep -oP "0x[0-9a-zA-Z]+" | tail -n 1`
    rm -rf tmpkey
    chown -R root:root /usr/lib/aladdin-vault-cli/
    chmod -R 775 /usr/lib/aladdin-vault-cli/
    ln -s /usr/lib/aladdin-vault-cli/bin/aladdin /usr/bin/aladdin
    cd /usr/lib/aladdin-vault-cli/
    sed -i "s/0x0000000000000000000000000000000000000000000000000000000000000000/$TMPKEY/" /usr/lib/aladdin-vault-cli/.config.json
    sed -i "s/0x0000000000000000000000000000000000000000/$ETHERBASE/" /usr/lib/aladdin-vault-cli/.config.json
    cd /usr/lib/aladdin-vault-api
    node utils/deploy.js
    export CONTRACT_ADDRESS=`cat config/local.json | grep "contract_address" | grep -oP "0x[0-9a-zA-Z]+"`
    export CONTRACT_BLOCK=`cat config/local.json | grep "contract_block" | grep -oP "0x[0-9a-zA-Z]+"`
    sed -i "s/<contract_address>/$CONTRACT_ADDRESS/" /usr/lib/aladdin-vault-cli/.config.json
    sed -i "s/<contract_block>/$CONTRACT_BLOCK/" /usr/lib/aladdin-vault-cli/.config.json
    sed -i "s/\"publicKey\": \"\"/\"publicKey\": \"$ETHERBASE\"/" /usr/lib/aladdin-vault-cli/.config.json
    sed -i "s/\"privateKey\": \"\"/\"privateKey\": \"$TMPKEY\"/" /usr/lib/aladdin-vault-cli/.config.json
